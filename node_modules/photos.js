var credentials = require(__dirname + '/../config/credentials'),
    xml2js = require('xml2js'),
    client = require('knox').createClient(
    {
        key: credentials.aws.key,
        secret: credentials.aws.secret,
        bucket: 'fotocog'
    }),
    redis = require("redis").createClient();

exports = module.exports =
{
    cal: function (year, month, locale_info)
    {
        var result = [ [], [] ],
            row = 1,
            d1 = new Date(year, month - 1, 1, 12, 0, 0, 0),
            col = (d1.getDay() - locale_info.first_weekday + 8) % 7,
            d2 = new Date(year, month, 0, 12, 0, 0, 0),
            last = d2.getDate(),
            i;
        for (i = 0; i < 7; i++)
        {
            result[0][i] = locale_info.abday[(i - locale_info.first_weekday + 8) % 7];
        }
        for (i = 0; i < col; i++)
        {
            result[1][i] = '';
        }
        for (i = 1; i <= last; i++)
        {
            if (!result[row])
            {
                result[row] = [];
            }
            result[row][col] = i;
            if (++col > 6)
            {
                col = 0;
                row++;
            }
        }
        for (i = col; i > 0 && i < 7; i++)
        {
            result[row][i] = '';
        }
        return result;
    },

    /**
     * For the specified user, year, and month, what days have photos?
     */
    days: function (handle, year, month, done)
    {
        var path =
            '/?delimiter=%2F&prefix='
            + encodeURIComponent(handle)
            + '%2Fthumbnail%2F'
            + encodeURIComponent(year)
            + '%2F'
            + encodeURIComponent(String(100 + (0|month)).substring(1))
            + '%2F';
        client.get(path).on('response', function (response)
        {
            var chunks = [],
                length = 0;
            response.on('data', function (chunk)
            {
                chunks.push(chunk);
                length += chunk.length;
            });
            response.on('end', function ()
            {
                var data = chunks[0];
                if (chunks.length > 1)
                {
                    data = new Buffer(length);
                    for (var i = 0, offset = 0; i < chunks.length; i++)
                    {
                        chunks[i].copy(data, offset);
                        offset += chunks[i].length;
                    }
                }
console.log(path+'\n'+data);
                var parser = new xml2js.Parser({explicitArray:true});
                parser.parseString(data, function (err, result)
                {
                    var data = [];
                    for (var i = 0; result && result.CommonPrefixes && i < result.CommonPrefixes.length; i++)
                    {
                        if ((/\/([0-9]{2})\/$/).test(result.CommonPrefixes[i].Prefix[0]))
                        {
                            data[0|RegExp.$1] = true;
                        }
                    }
                    done(null, data);
                });
            });
            response.on('done', function (err)
            {
                console.log("Got done: " + err.message);
                done(err);
            });
        }).on('error', function (err)
        {
            console.log("error: " + err.message);
            done(err);
        }).end();
    },

    /**
     * For the specified user and year, what months have photos?
     */
    months: function (handle, year, done)
    {
        var path =
            '/?delimiter=%2F&prefix='
            + encodeURIComponent(handle)
            + '%2Fthumbnail%2F'
            + encodeURIComponent(year)
            + '%2F';
        client.get(path).on('response', function (response)
        {
            var chunks = [],
                length = 0;
            response.on('data', function (chunk)
            {
                chunks.push(chunk);
                length += chunk.length;
            });
            response.on('end', function ()
            {
                var data = chunks[0];
                if (chunks.length > 1)
                {
                    data = new Buffer(length);
                    for (var i = 0, offset = 0; i < chunks.length; i++)
                    {
                        chunks[i].copy(data, offset);
                        offset += chunks[i].length;
                    }
                }
console.log(path+'\n'+data.toString());
                var parser = new xml2js.Parser({explicitArray:true});
                parser.parseString(data, function (err, result)
                {
                    var data = [];
                    for (var i = 0; result && result.CommonPrefixes && i < result.CommonPrefixes.length; i++)
                    {
                        if ((/\/([0-9]{2})\/$/).test(result.CommonPrefixes[i].Prefix[0]))
                        {
                            data[0|RegExp.$1] = true;
                        }
                    }
                    done(null, data);
                });
            });
            response.on('done', function (err)
            {
                console.log("Got done: " + err.message);
                done(err);
            });
        }).on('error', function (err)
        {
            console.log("error: " + err.message);
            done(err);
        }).end();
    },

    /**
     * For the specified user, year, and month, what days have photos?
     */
    photos: function (handle, year, month, day, done)
    {
        var path =
            '/?prefix='
            + encodeURIComponent(handle)
            + '%2Fthumbnail%2F'
            + encodeURIComponent(year)
            + '%2F'
            + encodeURIComponent(String(100 + (0|month)).substring(1))
            + '%2F'
            + encodeURIComponent(String(100 + (0|day)).substring(1))
            + '%2F';
        client.get(path).on('response', function (response)
        {
            var chunks = [],
                length = 0;
            response.on('data', function (chunk)
            {
                chunks.push(chunk);
                length += chunk.length;
            });
            response.on('end', function ()
            {
                var data = chunks[0];
                if (chunks.length > 1)
                {
                    data = new Buffer(length);
                    for (var i = 0, offset = 0; i < chunks.length; i++)
                    {
                        chunks[i].copy(data, offset);
                        offset += chunks[i].length;
                    }
                }
                var expires = new Date();
                expires.setMinutes(expires.getMinutes() + 10);
                var parser = new xml2js.Parser({explicitArray:true});
                parser.parseString(data, function (err, result)
                {
                    var data = [];
                    for (var i = 0; result && result.Contents && i < result.Contents.length; i++)
                    {
                        data.push(client.signedUrl('/' + result.Contents[i].Key[0], expires));
                    }
                    done(null, data);
                });
            });
            response.on('done', function (err)
            {
                console.log("Got done: " + err.message);
                done(err);
            });
        }).on('error', function (err)
        {
            console.log("error: " + err.message);
            done(err);
        }).end();
    },

    /**
     * For the specified user, what years have photos?
     */
    years: function (handle, done)
    {
        var path =
            '/?delimiter=%2F&prefix='
            + encodeURIComponent(handle)
            + '/thumbnail/';
        client.get(path).on('response', function (response)
        {
            var chunks = [],
                length = 0;
            response.on('data', function (chunk)
            {
                chunks.push(chunk);
                length += chunk.length;
            });
            response.on('end', function ()
            {
                var data = chunks[0];
                if (chunks.length > 1)
                {
                    data = new Buffer(length);
                    for (var i = 0, offset = 0; i < chunks.length; i++)
                    {
                        chunks[i].copy(data, offset);
                        offset += chunks[i].length;
                    }
                }
console.log(data.toString());
                var parser = new xml2js.Parser({explicitArray:true});
                parser.parseString(data, function (err, result)
                {
                    var data = [];
                    for (var i = 0; result && result.CommonPrefixes && i < result.CommonPrefixes.length; i++)
                    {
                        if ((/\/([0-9]{4})\/$/).test(result.CommonPrefixes[i].Prefix[0]))
                        {
                            data.unshift(0|RegExp.$1);
                        }
                    }
                    done(null, data);
                });
            });
            response.on('done', function (err)
            {
                console.log("Got done: " + err.message);
                done(err);
            });
        }).on('error', function (err)
        {
            console.log("error: " + err.message);
            done(err);
        }).end();
    }
};

